{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\12014\\\\code\\\\project3\\\\client\\\\src\\\\components\\\\Flashcard\\\\index.js\";\nimport React from 'react';\nimport FlipCard from 'react-flipcard';\nvar Flashcard = React.createClass({\n  displayName: \"Flashcard\",\n  getInitialState: function getInitialState() {\n    return {\n      isFlipped: false\n    };\n  },\n  showBack: function showBack() {\n    this.setState({\n      isFlipped: true\n    });\n  },\n  showFront: function showFront() {\n    this.setState({\n      isFlipped: false\n    });\n  },\n  handleOnFlip: function handleOnFlip(flipped) {\n    if (flipped) {\n      this.refs.backButton.getDOMNode().focus();\n    }\n  },\n  handleKeyDown: function handleKeyDown(e) {\n    if (this.state.isFlipped && e.keyCode === 27) {\n      this.showFront();\n    }\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FlipCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Front\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"(horizontal flip)\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Back\")));\n  }\n});\nexport default Flashcard;","map":{"version":3,"sources":["c:\\Users\\12014\\code\\project3\\client\\src\\components\\Flashcard\\index.js"],"names":["React","FlipCard","Flashcard","createClass","getInitialState","isFlipped","showBack","setState","showFront","handleOnFlip","flipped","refs","backButton","getDOMNode","focus","handleKeyDown","e","state","keyCode","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAIC,SAAS,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAAA;AAChCC,EAAAA,eADgC,6BACd;AAChB,WAAO;AACLC,MAAAA,SAAS,EAAE;AADN,KAAP;AAGD,GAL+B;AAOhCC,EAAAA,QAPgC,sBAOrB;AACT,SAAKC,QAAL,CAAc;AACZF,MAAAA,SAAS,EAAE;AADC,KAAd;AAGD,GAX+B;AAahCG,EAAAA,SAbgC,uBAapB;AACV,SAAKD,QAAL,CAAc;AACZF,MAAAA,SAAS,EAAE;AADC,KAAd;AAGD,GAjB+B;AAmBhCI,EAAAA,YAnBgC,wBAmBnBC,OAnBmB,EAmBV;AACpB,QAAIA,OAAJ,EAAa;AACX,WAAKC,IAAL,CAAUC,UAAV,CAAqBC,UAArB,GAAkCC,KAAlC;AACD;AACF,GAvB+B;AAyBhCC,EAAAA,aAzBgC,yBAyBlBC,CAzBkB,EAyBf;AACf,QAAI,KAAKC,KAAL,CAAWZ,SAAX,IAAwBW,CAAC,CAACE,OAAF,KAAc,EAA1C,EAA8C;AAC5C,WAAKV,SAAL;AACD;AACF,GA7B+B;AA+BhCW,EAAAA,MA/BgC,oBA+BvB;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAL,CAFF,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,CADF;AA+CD;AA/E+B,CAAlB,CAAhB;AAkFA,eAAejB,SAAf","sourcesContent":["import React from 'react';\r\nimport FlipCard from 'react-flipcard';\r\n\r\nvar Flashcard = React.createClass({\r\n  getInitialState() {\r\n    return {\r\n      isFlipped: false\r\n    };\r\n  },\r\n\r\n  showBack() {\r\n    this.setState({\r\n      isFlipped: true\r\n    });\r\n  },\r\n\r\n  showFront() {\r\n    this.setState({\r\n      isFlipped: false\r\n    });\r\n  },\r\n\r\n  handleOnFlip(flipped) {\r\n    if (flipped) {\r\n      this.refs.backButton.getDOMNode().focus();\r\n    }\r\n  },\r\n\r\n  handleKeyDown(e) {\r\n    if (this.state.isFlipped && e.keyCode === 27) {\r\n      this.showFront();\r\n    }\r\n  },\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Default behavior is horizontal flip on hover, or focus */}\r\n        <FlipCard>\r\n          {/* The first child is used as the front of the card */}\r\n          <div>\r\n            <div>Front</div>\r\n            <div><small>(horizontal flip)</small></div>\r\n          </div>\r\n          {/* The second child is used as the back of the card */}\r\n          <div>Back</div>\r\n        </FlipCard>\r\n\r\n        {/* The `type` attribute allows using a vertical flip */}\r\n        {/* <FlipCard type=\"vertical\">\r\n          <div>\r\n            <div>Front</div>\r\n            <div><small>(vertical flip)</small></div>\r\n          </div>\r\n          <div>Back</div>\r\n        </FlipCard> */}\r\n\r\n        {/*\r\n          The `disabled` attribute allows turning off the auto-flip\r\n          on hover, or focus. This allows manual control over flipping.\r\n\r\n          The `flipped` attribute indicates whether to show the front,\r\n          or the back, with `true` meaning show the back.\r\n        */}\r\n        {/* <FlipCard\r\n          disabled={true}\r\n          flipped={this.state.isFlipped}\r\n          onFlip={this.handleOnFlip}\r\n          onKeyDown={this.handleKeyDown}\r\n        >\r\n          <div>\r\n            <div>Front</div>\r\n            <button type=\"button\" onClick={this.showBack}>Show back</button>\r\n            <div><small>(manual flip)</small></div>\r\n          </div>\r\n          <div>\r\n            <div>Back</div>\r\n            <button type=\"button\" ref=\"backButton\" onClick={this.showFront}>Show front</button>\r\n          </div>\r\n        </FlipCard> */}\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default Flashcard;"]},"metadata":{},"sourceType":"module"}